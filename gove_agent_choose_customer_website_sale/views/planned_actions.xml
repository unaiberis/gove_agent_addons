<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <record id="action_auto_update_order_state" model="ir.actions.server">
        <field name="name">Auto Update Order State</field>
        <field name="model_id" ref="model_sale_order" />
        <field name="state">code</field>
        <field name="code">
model = env['sale.order']
orders_to_update = model.search([('woo_status', '!=', False),('woo_import_already_reset', '=', False)])

# Update type_id to 2 for all orders
orders_to_update.write({'type_id': 2})

# Filter orders in 'sale' state and update state to 'draft'
sale_orders_to_update =orders_to_update.filtered(lambda order: order.state == 'sale')
sale_orders_to_update.write({'state': 'draft', 'woo_import_already_reset': True})
        </field>
        <field name="trigger">
            <field name="trigger_type">on_create_or_write</field>
            <field name="res_model">sale.order</field>
        </field>
    </record>

    <record id="automation_auto_update_order_state" model="base.automation">
        <field name="name">Auto Update Order State</field>
        <field name="model_id" ref="model_sale_order"/>
        <field name="trigger">
            <field name="trigger_type">on_create_or_write</field>
            <field name="res_model">sale.order</field>
        </field>
        <field name="action">
            <field name="action_type">code</field>
            <field name="code">model = env['sale.order']; orders_to_update = model.search([('woo_status', '!=', False), ('woo_import_already_reset', '=', False)]); orders_to_update.write({'type_id': 2}); sale_orders_to_update = orders_to_update.filtered(lambda order: order.state == 'sale'); sale_orders_to_update.write({'state': 'draft', 'woo_import_already_reset': True})</field>
        </field>
    </record>

    <record id="auto_cancel_order_server_cron" model="ir.cron">
        <field name="name">Set Surf Order Types and Unconfirm Quotations</field>
        <field name="interval_number">30</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">-1</field>
        <field name="doall">True</field>
        <field name="model_id" ref="sale.model_sale_order" />
        <field name="state">code</field>
        <field name="code">
model = env['sale.order']
orders_to_update = model.search([('woo_status', '!=', False),('woo_import_already_reset', '=', False)])

# Update type_id to 2 for all orders
orders_to_update.write({'type_id': 2})

# Filter orders in 'sale' state and update state to 'draft'
sale_orders_to_update = orders_to_update.filtered(lambda order: order.state == 'sale')
sale_orders_to_update.write({'state': 'draft', 'woo_import_already_reset': True})
        </field>
    </record>
</odoo>